{"version":3,"sources":["components/todoinput/TodoInput.js","redux/actions/actions.js","components/todolistitem/TodoListItem.js","components/todolist/TodoList.js","components/app/App.js","redux/state/state.js","redux/reducers/index.js","redux/reducers/tasks.js","redux/reducers/find.js","redux/store/store.js","index.js"],"names":["TodoInput","dispatch","useDispatch","useState","name","setName","idmax","setIdmax","className","type","placeholder","onChange","e","target","value","onKeyPress","key","console","log","pressKey","disabled","onClick","payload","id","done","TodoListItem","todo","width","height","viewBox","fill","xmlns","fillRule","d","TodoList","tasks","useSelector","state","flag","searches","search","toLowerCase","data","filter","task","indexOf","map","Search","records","setSearch","aria-label","aria-describedby","preventDefault","word","searchword","Header","posts","doneTodo","length","App","todos","allReducers","combineReducers","newTasks","action","find","newArray","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4187e7f5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addTodo } from '../../redux/actions/actions';\n\nfunction TodoInput() {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [idmax, setIdmax] = useState(4);\n\n  const maxid = () => {\n    setIdmax(idmax + 1);\n\n    return idmax;\n  };\n\n  const disable = () => {\n    if (name === '') {\n      return true;\n    }\n    return false;\n  };\n\n  const pressKey = (e) => {\n    if (e.key === 'Enter') {\n      console.log('ENTER KEY');\n    }\n  };\n\n  return (\n    // eslint-disable-next-line react/jsx-filename-extension\n    <div>\n      <div className=\"row m-2\">\n        <input\n          type=\"text\"\n          placeholder=\"Что нужно выполнить сегодня?\"\n          className=\"col form-control\"\n          onChange={(e) => setName(e.target.value)}\n          value={name}\n          onKeyPress={(e) => pressKey(e)}\n        />\n\n        <button\n          type=\"button\"\n          disabled={disable()}\n          onClick={() => {\n            dispatch(addTodo({\n              id: maxid(),\n              name,\n              done: false,\n            }));\n            setName('');\n          }}\n          className=\"btn btn-primary mx-2\"\n        >\n          Add\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default TodoInput;\n","/* eslint-disable arrow-body-style */\n/* eslint-disable comma-dangle */\nexport const addTodo = (todo) => {\n  return {\n    type: 'ADD_TODO',\n    payload: todo\n  };\n};\n\nexport const delTodo = (todoId) => {\n  return {\n    type: 'DEL_TODO',\n    payload: todoId\n  };\n};\n\nexport const doneTodo = (todoId) => {\n  return {\n    type: 'DONE',\n    payload: todoId\n  };\n};\n\nexport const allTodo = (todo) => {\n  return {\n    type: 'ALLRECORDS',\n    payload: todo\n  };\n};\n\nexport const completedTodo = (todoId) => {\n  return {\n    type: 'COMPLETED',\n    payload: todoId\n  };\n};\n\nexport const searchTodo = (todo) => {\n  return {\n    type: 'LIVE_SEARCH',\n    payload: todo\n  };\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport './TodoListItem.css';\nimport { useDispatch } from 'react-redux';\nimport { delTodo, doneTodo } from '../../redux/actions/actions';\n\nfunction TodoListItem({ todo }) {\n  const dispatch = useDispatch();\n\n  const classNames = 'col';\n  const classNamesDone = 'col done';\n  const alldonefalse = 'alldone';\n  const alldonetrue = 'alldone ok';\n\n  return (\n    // eslint-disable-next-line react/jsx-filename-extension\n    <div>\n      <div className=\"row mx-2 align-items-center\">\n        <div className={todo.done ? alldonetrue : alldonefalse}>\n          {todo.done ? (\n            <svg width=\"40px\" height=\"40px\" viewBox=\"0 0 16 16\" className=\"bi bi-check\" fill=\"green\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path fillRule=\"evenodd\" d=\"M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.236.236 0 0 1 .02-.022z\" />\n            </svg>\n          ) : '' }\n        </div>\n        <div className={todo.done ? classNamesDone : classNames}>\n          <h5>{todo.name}</h5>\n        </div>\n        <button type=\"button\" onClick={() => dispatch(doneTodo(todo.id))} className=\"btn btn-success m-2\">{todo.done ? 'Undone' : 'Done'}</button>\n        <button type=\"button\" onClick={() => dispatch(delTodo(todo.id))} className=\"btn btn-danger m-2\">Delete</button>\n      </div>\n    </div>\n  );\n}\n\nexport default TodoListItem;\n","/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable no-shadow */\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport TodoListItem from '../todolistitem/TodoListItem';\n\nfunction TodoList() {\n  const tasks = useSelector((state) => state.tasks.tasks);\n  const flag = useSelector((state) => state.tasks.flag);\n  const searches = useSelector((state) => state.tasks.search).toLowerCase();\n  let data = tasks;\n\n  if (flag) {\n    data = tasks.filter((data) => data.done);\n  }\n\n  if (searches) {\n    data = data.filter((task) => task.name.toLowerCase().indexOf(searches) > -1);\n  }\n\n  console.log('Тип', searches);\n\n  return (\n    <div className=\"my-3\">\n      {\n                data.map((todo) => <TodoListItem key={todo.id} todo={todo} />)\n            }\n    </div>\n  );\n}\n\nexport default TodoList;\n","/* eslint-disable react/jsx-filename-extension */\nimport React, { useState } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport TodoInput from '../todoinput/TodoInput';\nimport TodoList from '../todolist/TodoList';\n\nimport { allTodo, completedTodo, searchTodo } from '../../redux/actions/actions';\n\nconst Search = () => {\n  const dispatch = useDispatch();\n  const records = useSelector((state) => state.tasks);\n  const [search, setSearch] = useState('');\n\n  const searchword = (e) => {\n    e.preventDefault();\n    const word = e.target.value;\n    setSearch(word);\n    return word;\n  };\n\n  return (\n    <div className=\"search-box\">\n      <div className=\"input-group\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Поиск записей\"\n          aria-label=\"Recipient's username with two button addons\"\n          aria-describedby=\"button-addon4\"\n          onChange={(e) => dispatch(searchTodo(searchword(e)))}\n          value={search}\n        />\n\n        <div className=\"input-group-append\" id=\"button-addon4\">\n          <button onClick={() => dispatch(allTodo(records))} className=\"btn btn-outline-secondary\" type=\"button\">All</button>\n          <button onClick={() => dispatch(completedTodo(records))} className=\"btn btn-outline-secondary\" type=\"button\">Completed</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Header = () => {\n  const posts = useSelector((state) => state.tasks.tasks);\n  // Выполненные посты, фильтруем по свойству done\n  const doneTodo = posts.filter((todo) => todo.done).length;\n\n  return (\n    <div className=\"header\">\n      <h1>Todo list with redux </h1>\n      <Search />\n      <div className=\"header-info\">\n        <p>\n          Всего задач:\n          {` ${posts.length}`}\n        </p>\n        <p className=\"completed\">\n          Выполнено:\n          {` ${doneTodo}`}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <TodoInput />\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-disable import/prefer-default-export */\nexport const todos = {\n  tasks: [\n    {\n      id: 1,\n      name: 'One',\n      done: false,\n\n    },\n    {\n      id: 2,\n      name: 'Two',\n      done: false,\n    },\n    {\n      id: 3,\n      name: 'Three',\n      done: false,\n    }],\n\n  flag: false,\n  search: '',\n\n};\n","import { combineReducers } from 'redux';\nimport { tasks } from './tasks';\nimport { find } from './find';\n\nconst allReducers = combineReducers({\n  tasks,\n  find,\n\n});\n\nexport default allReducers;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable default-case */\n/* eslint-disable import/prefer-default-export */\nimport { todos } from '../state/state';\n\nexport const tasks = (state = todos, action) => {\n  let newTasks;\n\n  switch (action.type) {\n    case 'ADD_TODO':\n      return {\n        ...state,\n        tasks: [...state.tasks, action.payload],\n      };\n\n    case 'DEL_TODO':\n      newTasks = state.tasks.filter((task) => task.id !== action.payload);\n\n      return {\n        ...state,\n        tasks: newTasks,\n      };\n\n    case 'DONE':\n      newTasks = state.tasks.map((task) => {\n        if (task.id === action.payload) {\n          return {\n            ...task,\n            done: !task.done,\n          };\n        }\n        return task;\n      });\n\n      return {\n        ...state,\n        tasks: newTasks,\n      };\n\n    case 'ALLRECORDS':\n      return {\n        ...state,\n        flag: false,\n      };\n\n    case 'COMPLETED':\n      return {\n        ...state,\n        flag: true,\n      };\n\n    case 'LIVE_SEARCH':\n      state.search = action.payload;\n\n      return state;\n  }\n  return state;\n};\n","/* eslint-disable default-case */\n/* eslint-disable import/prefer-default-export */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-console */\n\nexport const find = (state = [], action) => {\n  let newArray;\n\n  switch (action.type) {\n    case 'ALL':\n      state = action.payload;\n\n      return state;\n\n    case 'COMPL':\n      state = action.payload;\n\n      newArray = state.filter((data) => data.done === true);\n\n      console.log(`COMPLETED ${newArray.length}`);\n\n      return newArray;\n  }\n  return state;\n};\n","/* eslint-disable no-underscore-dangle */\n/* eslint-disable import/prefer-default-export */\nimport { createStore } from 'redux';\nimport allReducers from '../reducers/index';\n\nexport const store = createStore(\n  allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './components/app/App';\nimport { store } from './redux/store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}